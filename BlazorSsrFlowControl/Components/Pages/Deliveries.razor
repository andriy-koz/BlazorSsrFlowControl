@page "/deliveries"
@inject DataContext Context
@using BlazorSsrFlowControl.Models

@if (lastActiveOrder is not null)
{
    <h3>Entregar - @lastActiveOrder.ModelName</h3>

    <EditForm FormName="DeliveryForm" Model="NewDelivery" OnSubmit="HandleSubmit">
        <InputNumber @bind-Value="NewDelivery.Quantity" class="visually-hidden" />
        <InputNumber @bind-Value="NewDelivery.OrderId" class="visually-hidden" />
        <button type="submit" class="btn btn-primary">Enviar</button> 
    </EditForm>
}
else 
{
    <h3>No hay ordenes activas</h3>
}

@code 
{
    [SupplyParameterFromForm]
    private Delivery NewDelivery { get; set; } = new();
    private Order lastActiveOrder = new();
    private int orderId;
    private int? quantityPerDelivery;

    protected override async Task OnParametersSetAsync()
    {
        if(Context.Orders is not null)
        {
            lastActiveOrder = await Context.Orders.OrderByDescending(x => x.Id).FirstOrDefaultAsync(x => x.IsActive == true);
        }
        if (lastActiveOrder is not null)
        {
            orderId = lastActiveOrder.Id;
            quantityPerDelivery = lastActiveOrder.QuantityPerDelivery;
        }
    }
    async Task CreateDelivery()
    {
        DateTime actualTime = DateTime.Now;

        NewDelivery.Hour = actualTime.Hour;
        NewDelivery.Minute = actualTime.Minute;
        NewDelivery.Quantity = quantityPerDelivery;
        NewDelivery.OrderId = orderId;

        lastActiveOrder.ActualQuantity += lastActiveOrder.QuantityPerDelivery;

        Context.Deliveries.Add(NewDelivery);

        await Context.SaveChangesAsync();
    }

    async Task HandleSubmit() {
        if (lastActiveOrder is not null)
        {
            await CreateDelivery();
        }
    }
}